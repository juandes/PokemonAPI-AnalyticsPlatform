{"name":"Pokemon API using Python, Flask and MongoDB","tagline":"A simple API for getting Pokemon data. Written in Python using Flask-RESTful and MongoDB (alongside PyMongo)","body":"# Pokemon API using Python, Flask and MongoDB\r\n\r\n## Overview\r\n***\r\nA simple API for getting Pokemon data. Written in Python using Flask-RESTful and MongoDB (alongside PyMongo).\r\n\r\n## API Reference\r\n***\r\n\r\n### Get national Pokedex\r\n\r\nReturns the national Pokedex (718 Pokemon) in JSON format.\r\n\r\n**GET** /pokemon/api/v1.0/pokedex \r\n\r\nEach object these fields:\r\n\r\n- name\r\n- national_id\r\n- primary_type\r\n- height\r\n- weight\r\n- region\r\n- base_experience\r\n- catch_rate\r\n- hp\r\n- attack\r\n- special_attack\r\n- defense\r\n- special_defense\r\n- speed\r\n- total\r\n- hp_ev\r\n- attack_ev\r\n- special_attack_ev\r\n- defense_ev\r\n- special_defense_ev\r\n- speed_ev\r\n- dragon_egg_group\r\n- mineral_egg_group\r\n- amorphous_egg_group\r\n- field_egg_group\r\n- undiscovered_egg_group\r\n- flying_egg_group\r\n- water1_egg_group\r\n- water2_egg_group\r\n- water3_egg_group\r\n- humanlike_egg_group\r\n- ditto_egg_group\r\n- grass_egg_group\r\n- secondary_type\r\n- fairy_egg_group\r\n- monster_egg_group\r\n- male_ratio\r\n- egg_cycles\r\n- female_ratio\r\n- base_happiness\r\n\r\n#### Get regional Pokedex\r\n\r\nReturns the Pokedex of a specific region (Kanto, Johto, Hoenn, Sinnoh, Unova and Kalos).\r\n\r\n**GET** /pokemon/api/v1.0/pokedex/{region}\r\n\r\n## Notes\r\n***\r\n\r\nThis is a work in progress. I will be adding new features to the API in the future. Also, the API is not available online yet.\r\n\r\n## Things I have in mind\r\n***\r\n\r\n- Make a field named egg_group with the egg group of each Pokemon, instead of having all the egg groups\r\nas a Boolean field.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}